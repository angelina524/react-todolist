{"version":3,"sources":["TodoList/components/AddTodoForm.js","TodoList/components/Item.js","TodoList/components/List.js","TodoList/index.js","index.js"],"names":["FormWrapper","styled","div","Input","input","Button","button","AddTodoForm","add","useState","value","setValue","id","useRef","onChange","e","target","type","placeholder","onClick","prevDate","current","checked","Todo","Label","label","InputCheckbox","Content","span","DeleteButton","TodoItem","changeData","deleteData","defaultChecked","prevData","map","item","filter","ListWrapper","FilterButton","DeleteALLButton","List","listData","deleteAllData","filterData","setFilterData","TodoListWrapper","Title","TodoList","data","setDate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0408cf42.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { useState, useRef } from 'react'\n\nconst FormWrapper = styled.div`\n  padding: 30px 20px;\n  display: flex;\n  justify-content: center;\n`\n\nconst Input = styled.input`\n  padding: 10px 15px;\n  width: 100%;\n  margin-right: 20px;\n  border: 2px solid #BD4B4B;\n  font-size: 18px;\n\n  &::placeholder {\n    color: #BD4B4B;\n  }\n`\n\nconst Button = styled.button`\n  padding: 10px 25px;\n  background: #BD4B4B;\n  border: none;\n  color: white;\n  font-size: 18px;\n  cursor: pointer;\n`\n\nconst AddTodoForm = ({ add }) => {\n\n  const [value, setValue] = useState('')\n\n  const id = useRef(1)\n\n  const handleInputChange = e => {\n    setValue(e.target.value)\n  }\n\n  const handleAddClick = () => {\n    if (!value) return\n    add((prevDate) => {\n      return [\n        {\n          id: id.current,\n          value,\n          checked: false\n        },\n        ...prevDate,\n      ]\n    })\n    id.current++\n    setValue('')\n  }\n\n  return (\n    <FormWrapper>\n      <Input value={value} onChange={handleInputChange} type='text' placeholder=\"Let's do something.\" />\n      <Button onClick={handleAddClick}>ï¼‹</Button>\n    </FormWrapper>\n  )\n}\n\nexport default AddTodoForm","import styled from 'styled-components'\n\nconst Todo = styled.div`\nmargin: 10px 0;\npadding: 15px 20px;\ndisplay: flex;\njustify-content: space-between;\nalign-items: flex-start;\nbackground: white;\n`\n\nconst Label = styled.label``\n\nconst InputCheckbox = styled.input`\nmargin-right: 10px;\n\n&:checked + span {\n  text-decoration: line-through;\n  color: grey;\n}\n`\n\nconst Content = styled.span`\nword-break: break-all;\n`\n\nconst DeleteButton = styled.button`\npadding: 5px;\nmargin-left: 10px;\nborder: none;\nbackground: #EFB7B7;\ncolor: white;\n`\n\nconst TodoItem = ({ id, value, checked, changeData, deleteData }) => {\n\n  const handleDeleteClick = () => {\n    deleteData(prevData => {\n      return prevData.filter(item => {\n        return item.id !== id\n      })\n    })\n  }\n\n  const handleCheckboxClick = () => {\n    changeData(prevData => {\n      return prevData.map(item => {\n        if (item.id !== id) return item\n        return {\n          ...item,\n          checked: !checked\n        }\n      })\n    })\n  }\n\n  return (\n    <Todo key={id}>\n      <Label>\n        <InputCheckbox defaultChecked={checked} onClick={handleCheckboxClick} type='checkbox' />\n        <Content>{value}</Content>\n      </Label>\n      <DeleteButton onClick={handleDeleteClick}>X</DeleteButton>\n    </Todo>\n  )\n}\n\nexport default TodoItem","import styled from 'styled-components'\nimport TodoItem from './Item'\n\nconst ListWrapper = styled.div`\n  padding: 0px 20px 20px;\n`\n\nconst FilterButton = styled.button`\n  width: 100%;\n  max-width: 70px;\n  padding: 8px 0;\n  margin-right: 10px;\n  background: #EFB7B7;\n  border: none;\n  color: white;\n  font-weight: bold;\n  margin-bottom: 20px;\n  cursor: pointer;\n`\n\nconst DeleteALLButton = styled(FilterButton)`\n  max-width: 85px;\n`\n\nconst List = ({ listData, deleteAllData, changeData, deleteData, filterData, setFilterData }) => {\n\n  const handleDeleteALLClick = () => {\n    deleteAllData(() => {\n      return []\n    })\n  }\n\n  return (\n    <ListWrapper>\n      <FilterButton onClick={() => { setFilterData(null) }}>All</FilterButton>\n      <FilterButton onClick={() => { setFilterData(true) }}>Active</FilterButton>\n      <FilterButton onClick={() => { setFilterData(false) }}>Done</FilterButton>\n      <DeleteALLButton onClick={handleDeleteALLClick} >Delete All</DeleteALLButton>\n      {\n        listData.filter(item => {\n          return item.checked !== filterData\n        }).map(item => {\n          const { id, value, checked } = item\n          return <TodoItem key={id} id={id} value={value} checked={checked} changeData={changeData} deleteData={deleteData} />\n        })\n      }\n    </ListWrapper>\n  )\n}\n\nexport default List","import AddTodoForm from './components/AddTodoForm'\nimport List from './components/List'\nimport styled from 'styled-components'\nimport { useState } from 'react'\n\nconst TodoListWrapper = styled.div`\n  margin: 100px auto;\n  width: 100%;\n  max-width: 600px;\n`\n\nconst Title = styled.div`\n  font-size: 36px;\n  text-align: center;\n  font-weight: bold;\n  color: #BD4B4B;\n`\n\nconst TodoList = () => {\n\n  const [data, setDate] = useState([])\n\n  const [filterData, setFilterData] = useState()\n\n  return (\n    < TodoListWrapper >\n      <Title>TodoList</Title>\n      <AddTodoForm add={setDate} />\n      <List listData={data} deleteAllData={setDate} changeData={setDate} deleteData={setDate} filterData={filterData} setFilterData={setFilterData} />\n    </TodoListWrapper >\n  )\n}\n\nexport default TodoList","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TodoList from './TodoList'\n\nReactDOM.render(\n  <TodoList />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}